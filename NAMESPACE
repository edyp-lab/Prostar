import(MultiAssayExperiment)
import(rhandsontable)
import(data.table)
import(sass)
import(webshot)
import(htmlwidgets)
importFrom(shinyWidgets,dropdownButton)
import(DAPARdata)
import(shinyAce)
import(shinyBS)
import(BiocManager)
import(highcharter)
importFrom(shinyjs, info)
importFrom(DT, dataTableOutput,renderDataTable )
import(R.utils)
import(shinythemes)
import(XML)
import(rclipboard)
import(colourpicker)
import(later)
import(shinycssloaders)
import(future)
import(shinyjqui)
import(shinyTree)
import(colourpicker)
import(promises)

importFrom(shiny,
            absolutePanel ,
            actionButton ,
            checkboxGroupInput ,
            checkboxInput,
            column,
            conditionalPanel,
            fileInput,
            fixedPage,
            flowLayout,
            fluidPage,
            headerPanel,
            helpText,
            HTML,
            htmlOutput,
            icon,
            isolate,
            mainPanel,
            makeReactiveBinding,
            navbarPage,
            navlistPanel,
            numericInput,
            observe,
            pageWithSidebar,
            plotOutput,
            radioButtons,
            reactive  ,
            reactiveUI ,
            reactiveValues  ,
            renderPlot  ,
            renderPrint  ,
            renderTable ,
            renderText ,
            renderUI  ,
            runApp  ,
            selectInput  ,
            shinyApp ,
            shinyServer  ,
            shinyUI  ,
            sidebarLayout ,
            sidebarPanel ,
            singleton  ,
            sliderInput  ,
            splitLayout  ,
            submitButton  ,
            tableOutput  ,
            tabPanel  ,
            tag  ,
            textInput  ,
            textOutput ,
            titlePanel  ,
            updateCheckboxGroupInput ,
            updateCheckboxInput ,
            updateNumericInput ,
            updateRadioButtons ,
            updateSelectInput  ,
            updateSliderInput ,
            updateTabsetPanel  ,
            updateTextInput ,
            #validate ,
            wellPanel ,
            withTags 
            )




exportPattern("^[[:alpha:]]+")
importFrom(MSnbase, MSnSet-class, readMSnSet)
import(DAPARdata)
import(RColorBrewer)
import(Cairo)
import(png)
import(lattice)
import(reshape2)
import(tmvtnorm)
import(ggplot2)
import(norm)
import(highcharter)
import(vioplot)
importFrom(impute, impute.knn)
import(knitr)
importFrom("doParallel", "registerDoParallel")
importFrom("dplyr", "left_join", "mutate","tbl_df", "select_","data_frame", "last", "tibble")
importFrom("tidyr", "gather")
import("foreach")
importFrom("AnnotationDbi", "keys")
import("parallel")
import("doParallel")
#import("Matrix")
import(cp4p)
import(FactoMineR)
import(factoextra)
importFrom("grDevices","rainbow")


import(tidyverse)
import(imp4p)
importFrom("graphics", "par", "boxplot", "axis", "mtext", "abline", "points", 
            "legend", "lines",  "barplot", "text","hist", "segments",
           "layout", "plot.new", "strheight", "strwidth", "title","plot.window")
 
importFrom("stats", "lowess", "cor", "density","pexp", "mad", 
            "var", "t.test", "dist", "hclust", "setNames", 
            "median", "p.adjust", "model.matrix", "rnorm","na.omit",
           "quantile", "rbeta", "runif", "sd", "pchisq", "residuals","formula", "lm", "logLik",
           "complete.cases")
import("preprocessCore")
importFrom("gplots", "heatmap.2")
importFrom("limma", "lmFit", "eBayes", "topTable", "makeContrasts", "contrasts.fit", "normalizeCyclicLoess")
importFrom("pcaMethods", "completeObs", "pca")
importFrom("scales", "alpha")
importFrom("grDevices", "colorRampPalette", "palette", "heat.colors")
importFrom("utils", "combn", "read.csv", "read.table", "de", "str","write.csv", "zip", "installed.packages")
#importFrom("lme4", "getME")
importFrom("openxlsx", "getSheetNames", "createWorkbook", "addWorksheet", "writeData", "saveWorkbook")
importFrom("readxl","read_excel")
import("siggenes") # SAM
import("graph")
importFrom("visNetwork","visNetwork", "visNodes", "visGroups", "visOptions", "visEdges")
importFrom("stringr", "str_match_all")
importFrom("clusterProfiler", "bitr", "enrichGO", "groupGO")
importFrom("vsn","vsn2","predict")
import('Matrix')
#import('igraph')

  
export(
"writeMSnsetToExcel",
"writeMSnsetToCSV",
"createMSnset",
"readExcel",
"listSheets",
"addOriginOfValue","saveParameters",
"rbindMSnset",

"boxPlotD",
"densityPlotD"
,"wrapper.CVDistD","CVDistD"
,"wrapper.corrMatrixD","corrMatrixD"
,"wrapper.heatmapD","heatmapD"
,"wrapper.mvPerLinesHisto", "mvPerLinesHisto"
,"wrapper.mvPerLinesHisto_HC", "mvPerLinesHisto_HC"
,"wrapper.mvPerLinesHistoPerCondition", "mvPerLinesHistoPerCondition"
,"wrapper.mvHisto", "mvHisto"
,"wrapper.pca",
"plotPCA_Eigen_hc"
,"plotPCA_Var", "plotPCA_Ind"


,"wrapper.hc_mvTypePlot2","hc_mvTypePlot2"
,"wrapper.mvImage","mvImage"
,"heatmap.DAPAR"

,"mvFilter"
,"mvFilterFromIndices"
,"mvFilterGetIndices"
,"removeLines"
,"deleteLinesFromIndices"
,"StringBasedFiltering"
,"getIndicesOfLinesToRemove"
,"wrapper.normalizeD"
,"wrapper.compareNormalizationD","compareNormalizationD"
,"getListNbValuesInLines"

,"reIntroduceMEC"
,"findMECBlock"
,"wrapper.impute.fixedValue"
,"wrapper.impute.detQuant"
,"wrapper.impute.slsa"
,"getQuantile4Imp"
,"wrapper.impute.KNN"
,"wrapper.impute.mle"



,"aggregateTopn"
,"aggregateMean"
,"aggregateSum"
,"aggregateIterParallel"
,"aggregateIter"
,"BuildAdjacencyMatrix"
,"GraphPepProt"
,"BuildColumnToProteinDataset"
,"BuildColumnToProteinDataset_par"
,"getProteinsStats"



## limma Complete test
,"limmaCompleteTest"
,"check.design"
,"check.conditions"




,"wrapper.t_test_Complete"
,"diffAnaVolcanoplot_rCharts"
,"diffAnaSave"
,"diffAnaComputeFDR"
,"wrapperCalibrationPlot"
,"hc_logFC_DensityPlot"


,"getProcessingInfo"

,"pepa.test"
,"compute.group.t.tests"


,"group_GO"
,"enrich_GO"
,"univ_AnnotDbPkg"
,"GOAnalysisSave"
,"scatterplotEnrichGO_HC"
,"barplotEnrichGO_HC"
,"barplotGroupGO_HC"

,"my_hc_ExportMenu"


)

export("Prostar")
